// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin"
type AppRouteHandlerRoutes = "/api/admin/archive" | "/api/admin/monitoring/alerts" | "/api/admin/monitoring/health" | "/api/admin/monitoring/stats" | "/api/admin/oversight/activity" | "/api/admin/security/metrics" | "/api/admin/system-config" | "/api/admin/users" | "/api/admin/users/bulk" | "/api/analytics" | "/api/analytics/charts" | "/api/analytics/conversation-analysis" | "/api/analytics/summary" | "/api/categorize" | "/api/discover" | "/api/embeddings" | "/api/embeddings/generate" | "/api/errors" | "/api/invitations/[token]/accept" | "/api/organizations" | "/api/organizations/[id]/invitations" | "/api/organizations/[id]/members" | "/api/performance" | "/api/search" | "/api/smart-priority" | "/api/smart-tags"
type PageRoutes = "/docs" | "/docs/api" | "/docs/architecture" | "/docs/contributing" | "/docs/deployment" | "/docs/getting-started" | "/docs/pwa" | "/docs/troubleshooting"
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = "/[[...path]]/_meta" | "/api/[[...path]]"
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/[[...path]]/_meta": { "path"?: string[]; }
  "/admin": {}
  "/api/[[...path]]": { "path"?: string[]; }
  "/api/admin/archive": {}
  "/api/admin/monitoring/alerts": {}
  "/api/admin/monitoring/health": {}
  "/api/admin/monitoring/stats": {}
  "/api/admin/oversight/activity": {}
  "/api/admin/security/metrics": {}
  "/api/admin/system-config": {}
  "/api/admin/users": {}
  "/api/admin/users/bulk": {}
  "/api/analytics": {}
  "/api/analytics/charts": {}
  "/api/analytics/conversation-analysis": {}
  "/api/analytics/summary": {}
  "/api/categorize": {}
  "/api/discover": {}
  "/api/embeddings": {}
  "/api/embeddings/generate": {}
  "/api/errors": {}
  "/api/invitations/[token]/accept": { "token": string; }
  "/api/organizations": {}
  "/api/organizations/[id]/invitations": { "id": string; }
  "/api/organizations/[id]/members": { "id": string; }
  "/api/performance": {}
  "/api/search": {}
  "/api/smart-priority": {}
  "/api/smart-tags": {}
  "/docs": {}
  "/docs/api": {}
  "/docs/architecture": {}
  "/docs/contributing": {}
  "/docs/deployment": {}
  "/docs/getting-started": {}
  "/docs/pwa": {}
  "/docs/troubleshooting": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
