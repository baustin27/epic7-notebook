// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/admin/page.tsx
{
  const handler = {} as typeof import("../../src/app/admin/page.js")
  handler satisfies AppPageConfig<"/admin">
}

// Validate ../../src/app/page.tsx
{
  const handler = {} as typeof import("../../src/app/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../src/app/api/admin/archive/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/archive/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/archive">
}

// Validate ../../src/app/api/admin/monitoring/alerts/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/monitoring/alerts/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/monitoring/alerts">
}

// Validate ../../src/app/api/admin/monitoring/health/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/monitoring/health/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/monitoring/health">
}

// Validate ../../src/app/api/admin/monitoring/stats/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/monitoring/stats/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/monitoring/stats">
}

// Validate ../../src/app/api/admin/oversight/activity/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/oversight/activity/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/oversight/activity">
}

// Validate ../../src/app/api/admin/security/metrics/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/security/metrics/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/security/metrics">
}

// Validate ../../src/app/api/admin/system-config/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/system-config/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/system-config">
}

// Validate ../../src/app/api/admin/users/bulk/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/users/bulk/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/users/bulk">
}

// Validate ../../src/app/api/admin/users/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/users/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/users">
}

// Validate ../../src/app/api/analytics/charts/route.ts
{
  const handler = {} as typeof import("../../src/app/api/analytics/charts/route.js")
  handler satisfies RouteHandlerConfig<"/api/analytics/charts">
}

// Validate ../../src/app/api/analytics/conversation-analysis/route.ts
{
  const handler = {} as typeof import("../../src/app/api/analytics/conversation-analysis/route.js")
  handler satisfies RouteHandlerConfig<"/api/analytics/conversation-analysis">
}

// Validate ../../src/app/api/analytics/route.ts
{
  const handler = {} as typeof import("../../src/app/api/analytics/route.js")
  handler satisfies RouteHandlerConfig<"/api/analytics">
}

// Validate ../../src/app/api/analytics/summary/route.ts
{
  const handler = {} as typeof import("../../src/app/api/analytics/summary/route.js")
  handler satisfies RouteHandlerConfig<"/api/analytics/summary">
}

// Validate ../../src/app/api/categorize/route.ts
{
  const handler = {} as typeof import("../../src/app/api/categorize/route.js")
  handler satisfies RouteHandlerConfig<"/api/categorize">
}

// Validate ../../src/app/api/discover/route.ts
{
  const handler = {} as typeof import("../../src/app/api/discover/route.js")
  handler satisfies RouteHandlerConfig<"/api/discover">
}

// Validate ../../src/app/api/embeddings/generate/route.ts
{
  const handler = {} as typeof import("../../src/app/api/embeddings/generate/route.js")
  handler satisfies RouteHandlerConfig<"/api/embeddings/generate">
}

// Validate ../../src/app/api/embeddings/route.ts
{
  const handler = {} as typeof import("../../src/app/api/embeddings/route.js")
  handler satisfies RouteHandlerConfig<"/api/embeddings">
}

// Validate ../../src/app/api/errors/route.ts
{
  const handler = {} as typeof import("../../src/app/api/errors/route.js")
  handler satisfies RouteHandlerConfig<"/api/errors">
}

// Validate ../../src/app/api/invitations/[token]/accept/route.ts
{
  const handler = {} as typeof import("../../src/app/api/invitations/[token]/accept/route.js")
  handler satisfies RouteHandlerConfig<"/api/invitations/[token]/accept">
}

// Validate ../../src/app/api/organizations/[id]/invitations/route.ts
{
  const handler = {} as typeof import("../../src/app/api/organizations/[id]/invitations/route.js")
  handler satisfies RouteHandlerConfig<"/api/organizations/[id]/invitations">
}

// Validate ../../src/app/api/organizations/[id]/members/route.ts
{
  const handler = {} as typeof import("../../src/app/api/organizations/[id]/members/route.js")
  handler satisfies RouteHandlerConfig<"/api/organizations/[id]/members">
}

// Validate ../../src/app/api/organizations/route.ts
{
  const handler = {} as typeof import("../../src/app/api/organizations/route.js")
  handler satisfies RouteHandlerConfig<"/api/organizations">
}

// Validate ../../src/app/api/performance/route.ts
{
  const handler = {} as typeof import("../../src/app/api/performance/route.js")
  handler satisfies RouteHandlerConfig<"/api/performance">
}

// Validate ../../src/app/api/search/route.ts
{
  const handler = {} as typeof import("../../src/app/api/search/route.js")
  handler satisfies RouteHandlerConfig<"/api/search">
}

// Validate ../../src/app/api/smart-priority/route.ts
{
  const handler = {} as typeof import("../../src/app/api/smart-priority/route.js")
  handler satisfies RouteHandlerConfig<"/api/smart-priority">
}

// Validate ../../src/app/api/smart-tags/route.ts
{
  const handler = {} as typeof import("../../src/app/api/smart-tags/route.js")
  handler satisfies RouteHandlerConfig<"/api/smart-tags">
}





// Validate ../../src/app/layout.tsx
{
  const handler = {} as typeof import("../../src/app/layout.js")
  handler satisfies LayoutConfig<"/">
}
