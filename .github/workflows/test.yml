name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: apps/web/package-lock.json

    - name: Install dependencies
      run: npm ci
      working-directory: apps/web

    - name: Type checking
      run: npm run type-check
      working-directory: apps/web

    - name: Lint code
      run: npm run lint
      working-directory: apps/web

    - name: Run unit tests
      run: npm run test:ci
      working-directory: apps/web

    - name: Check test coverage thresholds
      run: |
        COVERAGE=$(node -p "require('./coverage/coverage-summary.json').total.lines.pct")
        if (( $(echo "$COVERAGE < 80" | bc -l) )); then
          echo "Test coverage is below 80%: $COVERAGE%"
          exit 1
        fi
        echo "Test coverage: $COVERAGE%"
      working-directory: apps/web

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: apps/web/coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

    - name: Build application
      run: npm run build
      working-directory: apps/web

  e2e:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: apps/web/package-lock.json

    - name: Install dependencies
      run: npm ci
      working-directory: apps/web

    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      working-directory: apps/web

    - name: Run E2E tests
      run: npm run test:e2e
      working-directory: apps/web

    - name: Upload E2E test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: e2e-results
        path: apps/web/test-results/

  performance:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: apps/web/package-lock.json

    - name: Install dependencies
      run: npm ci
      working-directory: apps/web

    - name: Build application
      run: npm run build
      working-directory: apps/web

    - name: Run Lighthouse CI
      run: npm run lighthouse
      working-directory: apps/web

    - name: Upload Lighthouse results
      uses: actions/upload-artifact@v3
      with:
        name: lighthouse-results
        path: apps/web/test-results/lighthouse/

  accessibility:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: apps/web/package-lock.json

    - name: Install dependencies
      run: npm ci
      working-directory: apps/web

    - name: Run accessibility tests
      run: npm run test:a11y
      working-directory: apps/web

  bundle-analysis:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: apps/web/package-lock.json

    - name: Install dependencies
      run: npm ci
      working-directory: apps/web

    - name: Analyze bundle size
      run: npm run build:analyze
      working-directory: apps/web

    - name: Upload bundle analysis
      uses: actions/upload-artifact@v3
      with:
        name: bundle-analysis
        path: apps/web/.next/static/chunks/
        retention-days: 30

  security-scan:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: apps/web/package-lock.json

    - name: Install dependencies
      run: npm ci
      working-directory: apps/web

    - name: Run security audit
      run: npm audit --audit-level=moderate
      working-directory: apps/web
      continue-on-error: true

    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: javascript

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: './apps/web'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  storybook:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: apps/web/package-lock.json

    - name: Install dependencies
      run: npm ci
      working-directory: apps/web

    - name: Build Storybook
      run: npm run build-storybook
      working-directory: apps/web

    - name: Upload Storybook build
      uses: actions/upload-artifact@v3
      with:
        name: storybook-build
        path: apps/web/storybook-static/
        retention-days: 30

    - name: Deploy Storybook to GitHub Pages (on main branch)
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: apps/web/storybook-static
        cname: storybook.sleek-chat-interface.dev